- name: Install packages that allow apt to be used over HTTPS and basic tools
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - vim
      - gnupg
      - gnupg-agent
      - software-properties-common

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: Install docker and its dependecies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
  notify:
    - docker status

- name: Add vagrant user to docker group
  user:
    name: vagrant
    group: docker

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add an apt signing key for Kubernetes
  shell: >
    wget https://packages.cloud.google.com/apt/doc/apt-key.gpg &&
    apt-key add apt-key.gpg

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet=1.21.4-00
      - kubeadm=1.21.4-00
      - kubectl=1.21.4-00

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    create: yes

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted